* 기본 파일 추가 및 커밋

$ cd ~/git
$ cd 01_Basic_Commit
$ vi(또는 notepad) test1.txt         (파일 생성)
내용 작성후 빠져나온다.
$ git status            (파일 변경 메시지 확인)
$ git add test1.txt             (Commit 대상으로 추가)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        test1.txt

nothing added to commit but untracked files present (use "git add" to track)
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        new file:   test1.txt
$ gitk --all&
$ git commit -m "1111"            (커밋 및 커밋메시지 추가)
  또는 git commit -m "메시지"
  또는 git commit -a -m "메시지" (git add와 commit을 한꺼번에)
  (git add와 commit을 한꺼번에/-a는 --all commit all changed files
   특정 파일 commit은 -i, --include         add specified files to index for commit )
$ git status            (커밋 후 상태 변화 확인)
$ git log
$ gitk --all&

* 서버로 Push

$ git push origin master        (로컬 Repo의 내용을 서버 Repo로 전송)
$ git status            (커밋 후 상태 변화 확인)
$ git log
gitk에서는 shift+F5

* 파일 변경 후 Commit + Push는 각자 테스트

* 참고

$ git remote -v
$ git branch
$ git branch -r
